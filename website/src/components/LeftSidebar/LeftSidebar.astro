---
import { getSidebar } from '../../content/_sidebar';
import SidebarEntry from './SidebarEntry.astro';

type Props = {
  currentPage: string;
};

const { currentPage } = Astro.props;
const currentPageMatch = currentPage.endsWith('/')
  ? currentPage.slice(1, -1)
  : currentPage.slice(1);
const sidebar = getSidebar();
---

<nav aria-labelledby="grid-left">
  <ul class="nav-groups">
    {
      Object.entries(sidebar).map(([header, children]) => (
        <li>
          <div class="nav-group">
            <h2 class="nav-group-title">{header}</h2>
            <ul>
              {children.map((child) => {
                return <SidebarEntry currentPageMatch={currentPageMatch} entry={child} />
              })}
            </ul>
          </div>
        </li>
      ))
    }
  </ul>
</nav>

<script is:inline>
  window.addEventListener('DOMContentLoaded', () => {
    var target = document.querySelector('[aria-current="page"]');
    if (target && target.offsetTop > window.innerHeight - 100) {
      document.querySelector('.nav-groups').scrollTop = target.offsetTop;
    }
  });
</script>

<style>
  nav {
    width: 100%;
    margin-right: 1rem;
  }

  .nav-groups {
    height: 100%;
    padding: 2rem 0;
    overflow-x: visible;
    overflow-y: auto;
    max-height: 100vh;
  }

  .nav-groups > li + li {
    margin-top: 2rem;
  }

  .nav-groups > :first-child {
    padding-top: var(--doc-padding);
  }

  .nav-groups > :last-child {
    padding-bottom: 2rem;
    margin-bottom: var(--theme-navbar-height);
  }

  .nav-group-title {
    font-size: 1rem;
    font-weight: 700;
    padding: 0.1rem 1rem;
    text-transform: uppercase;
    margin-bottom: 0.5rem;
  }

  @media (min-width: 50em) {
    .nav-groups {
      padding: 0;
    }
  }
</style>
